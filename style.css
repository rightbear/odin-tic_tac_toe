*  {
    margin: 0;  
    padding: 0;
    box-sizing: border-box;

    --color-font-theme: rgb(70, 5, 66);
    --color-blue-theme: #00539F;
    --color-orange-theme: #FF9500;
}

html {
    font-family: 'Open Sans', sans-serif;
    background-color: var(--color-blue-theme);
}

/*************************************/

body {
    width: 100vw;
    height: 100vh;
}

.container {
    width: 100%;
    height: 100%;

    display: flex;
    align-items: center;
    justify-content: center;
}


/*************************************/

form {
    width: 800px;
    height: 500px;

    /* Center all elements in HTML form(.setUser) */
    text-align: center;

    background-color: var(--color-orange-theme);
    padding: 20px;
    border: 5px solid black;
}
 
form > h1 {
    font-size: 60px;
    margin: 0 auto;

    color: var(--color-blue-theme);
    text-shadow: 3px 3px 1px black;
}

.player1, .player2 {
    margin: 20px 150px;
    gap: 5px;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: start;
}

.player1 > *, .player2 > *{
    font-size: 30px;
}

form label {
    color: var(--color-font-theme);
    font-weight: bold;
}

form input {
    width: 100%;
    border: 2px solid var(--color-font-theme);
    background-color: lightgray;
    border-radius: 4px;

    padding: 5px;
}

form input:focus {
    color: var(--color-font-theme);
}

form > button {
    background-color: var(--color-font-theme);
    border: 2px solid lightgray;
    border-radius: 4px;

    color: lightgray;
    font-size: 25px;
    font-weight: bold;
    text-decoration: none;

    padding: 16px 32px;
    margin: 8px;

    cursor: pointer;
    transition-duration: 0.2s;
}

form > button:hover {
    background-color: var(--color-orange-theme);
    border: 2px solid var(--color-font-theme);
    color: var(--color-font-theme);
}

/*************************************/

.game {
    width: 800px;
    height: 500px;
    text-align: center;
    background-color: var(--color-orange-theme);
    padding: 20px;
    border: 5px solid black;

    /* Center all elements in HTML div(.game) */
    display: flex;
    flex-direction: column;
    align-items: center;
}

.game > h1 {
    font-size: 60px;
    margin: 0 auto;

    color: var(--color-blue-theme);
    text-shadow: 3px 3px 1px black;
}

.board {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);

    /* make inner border between buttos in grid */
    background-color: black;
    border: 0px;
    column-gap: 5px;
    row-gap: 5px;

    height: 210px;
    width: 210px;
    margin: 20px 0px;
}

.board > button {
    border: 1px solid var(--color-orange-theme);
    background-color: var(--color-orange-theme);
    font-size: 45px;
    text-align: center;
}

.game > button {
    background-color: var(--color-font-theme);
    border: 2px solid lightgray;
    border-radius: 4px;

    color: lightgray;
    font-size: 25px;
    font-weight: bold;
    text-decoration: none;

    padding: 16px 32px;
    margin: 8px;

    cursor: pointer;
    transition-duration: 0.2s;
}

.game > button:hover {
    background-color: var(--color-orange-theme);
    border: 2px solid var(--color-font-theme);
    color: var(--color-font-theme);
}

/*************************************/

dialog {
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
    margin:auto;
}

/* Change Dialogâ€™s backdrop */
::backdrop {
    background-image: linear-gradient(
      45deg,
      grey
    );
    opacity: 0.75;
}

/* Open state of the dialog  */
dialog:open {
    opacity: 1;
    transform: scaleY(1);
}
  
/* Closed state of the dialog   */
dialog {
  opacity: 0;
  transform: scaleY(0);
  transition:
  opacity 0.7s ease-out,
  transform 0.7s ease-out,
  overlay 0.7s ease-out allow-discrete,
  display 0.7s ease-out allow-discrete;
  /* Equivalent to
  ransition: all 0.7s allow-discrete; */
}
  
/* Before open state  */
/* Needs to be after the previous dialog:open rule to take effect,
  as the specificity is the same */
@starting-style {
  dialog:open {
    opacity: 0;
    transform: scaleY(0);
  }
}
  
/* Transition the :backdrop when the dialog modal is promoted to the top layer */
dialog::backdrop {
background-color: rgb(0 0 0 / 0%);
  transition:
    display 0.7s allow-discrete,
    overlay 0.7s allow-discrete,
    background-color 0.7s;
  /* Equivalent to
  transition: all 0.7s allow-discrete; */
}
  
dialog:open::backdrop {
  background-color: rgb(0 0 0 / 25%);
}
  
/* This starting-style rule cannot be nested inside the above selector
  because the nesting selector cannot represent pseudo-elements. */
  
@starting-style {
  dialog:open::backdrop {
    background-color: rgb(0 0 0 / 0%);
  }
}

/*************************************/

dialog > .result {
    font-size: 35px;
    margin-bottom: 10px;
}

dialog > button {
    background-color: var(--color-blue-theme);
    border: none;
    border-radius: 4px;
    font-size: 20px;
    color: #FFFFFF;
    padding: 20px;
    width: 150px;
    text-align: center;
    text-decoration: none;
    overflow: hidden;
    cursor: pointer;
}

dialog > button:hover {
    background-color: #022d55;
}